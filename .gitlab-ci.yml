image: docker:19

services:
  - docker:dind

cache:
  paths:
    - .m2/repository/
    - target/

stages:
  - test
  - package
  - build
  - deploy

maven-test:
  stage: test
  image: maven:latest
  script:
    - mvn test

maven-package:
  stage: package
  image: maven:latest
  only:
    - develop
    - master
  script:
    - mvn clean package -B

docker-build-develop:
  stage: build
  only:
    - develop
  before_script:
    - docker version
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

docker-build-master:
  stage: build
  only:
    - master
  before_script:
    - docker version
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:master || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:master --tag $CI_REGISTRY_IMAGE:master-$CI_COMMIT_SHORT_SHA --tag $CI_REGISTRY_IMAGE:master .
    - docker push $CI_REGISTRY_IMAGE:master-$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:master

.deploys:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  only:
    - develop
    - master
  before_script:
    - apk update && apk add openssh-client bash

    - eval $(ssh-agent -s)

    - bash -c 'ssh-add <(echo "$SSH_PRIVATE_KEY")'
    
    - mkdir -p ~/.ssh
    
    - ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts
    
    - chmod 644 ~/.ssh/known_hosts

deploy-develop:
  extends: .deploys
  only:
    - develop
  script:
    - >
      ssh $SSH_USER@$SSH_SERVER_IP
      "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY};
      cd ${PATH_TO_PROJECT};
      docker compose down;
      docker pull ${CI_REGISTRY_IMAGE}:latest;
      docker compose up -d;
      docker image prune -f;"

deploy-master:
  extends: .deploys
  only:
    - master
  script:
    - >
      ssh $SSH_USER@$SSH_SERVER_IP
      "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY};
      cd ${PATH_TO_PROJECT}/master;
      docker compose down;
      docker pull ${CI_REGISTRY_IMAGE}:master;
      docker compose up -d;
      docker image prune -f;"